(library
 (name test_util)
 (modules test_util)
 (wrapped false)
 (libraries pbrt unix))

(rule
 (targets test01.ml test01.mli)
 (deps test01.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc -I ./ -I ../../include/ocaml-protoc -I %{env:INCLUDE=/usr/include/}
    --binary --pp --ocaml_all_types_ppx "deriving show" --ml_out ./ ./
    test01.proto)))

(executable
 (name test01_ml)
 (modules test01_ml test01)
 (preprocess
  (pps ppx_deriving.show))
 (libraries test_util unix))

(rule
 (targets test02.ml test02.mli)
 (deps test02.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test02.proto)))

(executable
 (name test02_ml)
 (modules test02_ml test02)
 (libraries test_util unix))

(rule
 (targets test04.ml test04.mli)
 (deps test04.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test04.proto)))

(executable
 (name test04_ml)
 (modules test04_ml test04)
 (libraries test_util unix))

(rule
 (targets test05.ml test05.mli)
 (deps test05.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test05.proto)))

(executable
 (name test05_ml)
 (modules test05_ml test05)
 (libraries test_util unix))

(rule
 (targets test06.ml test06.mli)
 (deps test06.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test06.proto)))

(executable
 (name test06_ml)
 (modules test06_ml test06)
 (libraries test_util unix))

(rule
 (targets test07.ml test07.mli)
 (deps test07.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test07.proto)))

(executable
 (name test07_ml)
 (modules test07_ml test07)
 (libraries test_util unix))

(rule
 (targets test08.ml test08.mli)
 (deps test08.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test08.proto)))

(executable
 (name test08_ml)
 (modules test08_ml test08)
 (libraries test_util unix))

(rule
 (targets test09.ml test09.mli)
 (deps test09.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test09.proto)))

(library
 (name test09_gen)
 (modules test09)
 (wrapped false)
 (libraries pbrt))

(executable
 (name test09_ml)
 (modules test09_ml)
 (libraries test09_gen test_util unix))

(rule
 (targets test10.ml test10.mli)
 (deps test10.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test10.proto)))

(executable
 (name test10_ml)
 (modules test10_ml test10)
 (libraries test09_gen test_util unix))

(rule
 (targets test11.ml test11.mli)
 (deps test11.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test11.proto)))

(executable
 (name test11_ml)
 (modules test11_ml test11)
 (libraries test_util unix))

(rule
 (targets test12.ml test12.mli)
 (deps test12.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test12.proto)))

(executable
 (name test12_ml)
 (modules test12_ml test12)
 (libraries test_util unix))

(rule
 (targets test13.ml test13.mli)
 (deps test13.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test13.proto)))

(executable
 (name test13_ml)
 (modules test13_ml test13)
 (libraries test_util unix))

(rule
 (targets test14.ml test14.mli)
 (deps test14.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test14.proto)))

(executable
 (name test14_ml)
 (modules test14_ml test14)
 (libraries test_util unix))

(rule
 (targets test15.ml test15.mli)
 (deps test15.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc -I ../../include/ocaml-protoc -I %{env:INCLUDE=/usr/include/}
    --binary --pp --ml_out ./ ./ test15.proto)))

(executable
 (name test15_ml)
 (modules test15_ml test15)
 (libraries test_util unix))

(rule
 (targets test16.ml test16.mli)
 (deps test16.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc -I ../../include/ocaml-protoc -I %{env:INCLUDE=/usr/include/}
    --binary --pp --ml_out ./ ./ test16.proto)))

(executable
 (name test16_ml)
 (modules test16_ml test16)
 (libraries test_util unix))

(rule
 (targets test17.ml test17.mli)
 (deps test17.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc -I ../../include/ocaml-protoc -I %{env:INCLUDE=/usr/include/}
    --binary --pp --ml_out ./ ./ test17.proto)))

(executable
 (name test17_ml)
 (modules test17_ml test17)
 (libraries test_util unix))

(rule
 (targets test18.ml test18.mli)
 (deps test18.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc -I ../../include/ocaml-protoc -I %{env:INCLUDE=/usr/include/}
    --binary --pp --ml_out ./ ./ test18.proto)))

(executable
 (name test18_ml)
 (modules test18_ml test18)
 (libraries test_util unix))

(rule
 (targets test19.ml test19.mli)
 (deps test19.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc -I ../../include/ocaml-protoc -I %{env:INCLUDE=/usr/include/}
    --binary --pp --ml_out ./ ./ test19.proto)))

(executable
 (name test19_ml)
 (modules test19_ml test19)
 (libraries test_util unix))

(rule
 (targets test20.ml test20.mli)
 (deps test20.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc -I ../../include/ocaml-protoc -I %{env:INCLUDE=/usr/include/}
    --binary --pp --ml_out ./ ./ test20.proto)))

(executable
 (name test20_ml)
 (modules test20_ml test20)
 (preprocess
  (pps ppx_deriving.show))
 (libraries test_util unix))

(rule
 (targets test21.ml test21.mli)
 (deps test21.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc -I ../../include/ocaml-protoc -I %{env:INCLUDE=/usr/include/}
    --binary --pp --ml_out ./ ./ test21.proto)))

(executable
 (name test21_ml)
 (modules test21_ml test21)
 (preprocess
  (pps ppx_deriving.show))
 (libraries test_util unix))

(rule
 (targets test22.ml test22.mli)
 (deps test22.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test22.proto)))

(executable
 (name test22_ml)
 (modules test22_ml test22)
 (libraries test_util unix))

(rule
 (targets test23.ml test23.mli)
 (deps test23.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test23.proto)))

(executable
 (name test23_ml)
 (modules test23_ml test23)
 (libraries test_util unix))

(rule
 (targets test24.ml test24.mli)
 (deps test24.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test24.proto)))

(executable
 (name test24_ml)
 (modules test24_ml test24)
 (libraries test_util unix))

(rule
 (targets test25.ml test25.mli)
 (deps test25.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ ./ test25.proto)))

(executable
 (name test25_ml)
 (modules test25_ml test25)
 (libraries test_util unix))

(rule
 (targets test26.ml test26.mli)
 (deps test26.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc -I %{env:INCLUDE=/usr/include/} --binary --pp --ml_out ./ ./
    test26.proto)))

(executable
 (name test26_ml)
 (modules test26_ml test26)
 (libraries test_util unix))

(rule
 (targets test27.ml test27.mli)
 (deps test27.proto ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ test27.proto)))

(executable
 (name test27_ml)
 (modules test27_ml test27)
 (libraries test_util unix))

(rule
 (targets test_proto3_optional.ml test_proto3_optional.mli)
 (deps
  (:proto test_proto3_optional.proto)
  ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ %{proto})))

(executable
 (name test_proto3_optional)
 (libraries pbrt)
 (modules test_proto3_optional_ml test_proto3_optional))

(rule
 (targets test_make.ml test_make.mli)
 (deps
  (:proto test_make.proto)
  ../../include/ocaml-protoc/ocamloptions.proto)
 (action
  (run ocaml-protoc --binary --make --ml_out ./ %{proto})))

(executable
 (name test_make)
 (libraries pbrt)
 (modules test_make))
