(rule
 (targets example01.ml example01.mli)
 (deps example01.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ %{deps})))

(test
 (name example01)
 (modules t_example01 example01)
 (package ocaml-protoc)
 (libraries pbrt))

(rule
 (targets example03.ml example03.mli)
 (deps example03.proto)
 (action
  (run ocaml-protoc --pp --ml_out ./ %{deps})))

(test
 (name example03)
 (modules t_example03 example03)
 (package ocaml-protoc)
 (libraries pbrt))

(rule
 (targets example04.ml example04.mli)
 (deps example04.proto)
 (action
  (run ocaml-protoc --pp --ml_out ./ %{deps})))

(test
 (name example04)
 (modules t_example04 example04)
 (package ocaml-protoc)
 (libraries pbrt))

(rule
 (targets example05.ml example05.mli)
 (deps example05.proto)
 (action
  (run ocaml-protoc --binary --pp --ml_out ./ %{deps})))

(test
 (name example05)
 (modules t_example05 example05)
 (package ocaml-protoc)
 (libraries pbrt))

(rule
 (targets calculator.ml calculator.mli)
 (deps calculator.proto)
 (action
  (run ocaml-protoc --binary --pp --yojson --services --ml_out ./ %{deps})))

(test
 (name calculator)
 (modules t_calculator calculator)
 (package ocaml-protoc)
 (libraries pbrt pbrt_yojson pbrt_services))

(rule
 (targets file_server.ml file_server.mli)
 (deps file_server.proto)
 (action
  (run ocaml-protoc --binary --pp --yojson --services --ml_out ./ %{deps})))

(test
 (name file_server)
 (modules file_server) ; just check that it compiles
 (package ocaml-protoc)
 (libraries pbrt pbrt_yojson pbrt_services))

(rule
 (targets orgchart.ml orgchart.mli)
 (deps orgchart.proto)
 (action
  (run ocaml-protoc --pp --binary --ml_out ./ %{deps})))

(test
 (name orgchart_ml)
 (modules orgchart orgchart_ml)
 (package ocaml-protoc)
 (libraries pbrt))

(rule
 (targets build_server.ml build_server.mli)
 (deps build_server.proto)
 (action
  (run ocaml-protoc --binary --pp --yojson --services --ml_out ./ %{deps})))

(test
 (name build_server)
 (modules build_server) ; just check that it compiles
 (package ocaml-protoc)
 (libraries pbrt pbrt_yojson pbrt_services))

(include dune.inc)

(rule
 (alias runtest)
 (action
  (diff dune.inc dune.inc.gen)))

(rule
 (deps
  (:gen-dune ./gen-dune/main.exe))
 (action
  (with-stdout-to
   dune.inc.gen
   (run %{gen-dune} build_server calculator example01 example03 example04
     example05 file_server orgchart))))
